GAS LISTING looping.s 			page 1


   1              	/* 
   2              	   Illustrates looping through a buffer with counting
   3              	   Also, only processes a range.  In its final form, the loop 
   4              	   only prints the capital letters.
   5              	
   6              	   file: looping.s
   7              	
   8              	   compiles and links with gcc.  
   9              	   Change "main" to "_start" if using as and ld
  10              	
  11              	          Registers: 
  12              	             r15 -- Loop counter
  13              	             rsi -- Used to point to the next character to print (Not just for syscalls)
  14              	
  15              	*/
  16              	
  17              	.globl main
  18              	.data
  19              	      #buffer:  .ascii "(How), Now, \n[BrOwN] {CoW}ABZ!~@.123\n"
  20              	      
  21              	      buffer: .ascii ""
  22 0000 00000000 	      bufferN: .quad .-buffer
  22      00000000 
  23              	
  24              	.text
  25              	main:
  26              	
  27              	     /*
  28              	         The loop will count down from the bufferN to zero
  29              	     */
  30              	
  31              	    #prep for the loop
  32 0000 4C8B3C25 	    movq bufferN, %r15   #start at the length of the loop
  32      00000000 
  33 0008 48C7C600 	    movq $buffer, %rsi   #load the address of the buffer into rsi
  33      000000
  34 000f 4983C700 	    addq $0, %r15        # Set the zero flag if r15 is zero
  35              	
  36              	    _printloop:
  37 0013 7429     	    jz _endPrintLoop
  38              	
  39 0015 803E41   	    cmpb $'A', (%rsi)  #compare 'A' to the address pointed to by %rsi
  40 0018 721C     	    jb   _skipPrintingCharacter
  41 001a 803E5A   	    cmpb $'Z', (%rsi)  #compare 'Z' to the address pointed to by %rsi
  42 001d 7717     	    ja   _skipPrintingCharacter
  43              	    #print the current character pointed to by %rsi
  44 001f 48C7C001 	    movq $1, %rax   # syscall for writing
  44      000000
  45 0026 48C7C701 	    movq $1, %rdi   # 1 is the file descriptor for console
  45      000000
  46              	    #movq $buffer, %rsi   # not needed because the RSI is already loaded
  47 002d 48C7C201 	    movq $1, %rdx    # print just 1 character
  47      000000
  48 0034 0F05     	    syscall
  49              	    _skipPrintingCharacter:
  50              	    #prep for the next pass through the loop
  51 0036 48FFC6   	    inc %rsi
GAS LISTING looping.s 			page 2


  52 0039 49FFCF   	    dec %r15
  53 003c EBD5     	    jmp _printloop
  54              	
  55              	    _endPrintLoop:
  56              	
  57              	
  58              	_exit:
  59 003e 48C7C03C 	  movq $60, %rax
  59      000000
  60 0045 4C89FF   	  movq %r15, %rdi
  61 0048 0F05     	  syscall
  62              	
