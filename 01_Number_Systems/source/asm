#!/usr/bin/bash

# Simple script to assemble and link a single assembly language file
# Usage:  asm.sh filename
# where filename.s is the source file
# Produces filename.exe as the executable
# and filename.lst as the listing file
#
# Requires:  as, ld, cowsay, lolcat 
#
# To install cowsay and lolcat on Ubuntu:
# sudo apt-get install cowsay
# sudo gem install lolcat
#
# To install cowsay and lolcat on Fedora:
# sudo dnf install cowsay
# sudo gem install lolcat
#  
# Author:  J. Evan Noynaert

code=0
ASM='s'
EXE='.exe'
if [ $# -eq 0 ];
then
  cowsay -d No source file specified
  echo
  exit 1
fi
f=$1

source="$f.$ASM"
echo "Processing $f as $source"
if [ -f $f.o ]; then rm $f.o; fi
if [ -f $f.lst ]; then rm $f.lst; fi
if [ -f $f ]; then rm $f; fi


if [ -f $source ];
  then
     echo "Processing $f.$ASM"
  else
     echo "Did not find $f.$ASM.  ABORTING"
     exit 1
fi

object=$f.o
if [ -f $source ]; 
then
  as  -g -al -o $object --gdwarf-3  $source > $f.lst 2>&1
  code=$?
  if [ $code -ne 0 ];then
     echo "Assembler ended with error code $code" | lolcat
  fi 
  if [ -f $f.lst ]; then cat $f.lst; fi
  if [ -f $object ]; then ld -o $f$EXE $object >> $f.lst 2>&1; fi
  code=$?
  if [ $code -ne 0 ];then
     echo "Linker ended with error code $code" | lolcat
  fi 
  if [ -f $f$EXE ]; then
   echo "Compile and link successful"
   echo "Running..."
   ./$f$EXE
   code=$?
   echo "Exit code for the program is $code" | lolcat
  fi
fi
echo DONE
exit $code
