GAS LISTING 020_leaLoop.s 			page 1


   1              	/* 
   2              	   Loop using LEA and stack
   3              	*/
   4              	.globl main
   5              	.data
   6 0000 10000000 	    numbers: .quad 16, 32, 48, 64, 80 , 96, 112 
   6      00000000 
   6      20000000 
   6      00000000 
   6      30000000 
   7 0038 38000000 	    size: .quad .-numbers
   7      00000000 
   8 0040 456C656D 	    format: .asciz "Element [%d] is %d\n"
   8      656E7420 
   8      5B25645D 
   8      20697320 
   8      25640A00 
   9 0054 00000000 	    tmp: .quad 0
   9      00000000 
  10              	
  11              	
  12              	.text
  13              	main:
  14              	    #rbx = sum so far
  15              	    #rcx = index
  16              	    #r10 = holds the value of the size
  17              	    #r13 = current element
  18              	    #r14 = base address of array
  19              	    #r15 = end address of array
  20              	
  21              	    ###  Setup for the loop
  22              	
  23              	    #Store the base address of the array in r14
  24 0000 4C8D3500 	    leaq numbers(%rip), %r14
  24      000000
  25              	
  26              	    #Store the end address of the array in r15
  27 0007 4C8B1425 	    movq  size,%r10   #Move the of bytes in the array into r15
  27      00000000 
  28 000f 4E8D3C15 	    leaq  numbers(,%r10,1), %r15  #calculates the end of the array by adding size plus the base add
  28      00000000 
  29              	
  30              	    ## initialize the loop control variables
  31 0017 4831DB   	    xor %rbx, %rbx     # zero out the rbx
  32 001a 4831C9   	    xor %rcx, %rcx     # zero out the rcx
  33 001d 4D89F5   	    movq %r14, %r13
  34              	
  35              	
  36              	    ## loop through elements of the array, printing as we go
  37              	    ## Assumes there is one element to print
  38              	
  39              	    _printElement:
  40              	    # printf call for element of the array
  41 0020 4831C0   	    xor %rax, %rax
  42 0023 48C7C700 	    movq $format, %rdi
  42      000000
  43 002a 4889CE   	    movq %rcx, %rsi
GAS LISTING 020_leaLoop.s 			page 2


  44 002d 498B5500 	    movq (%r13), %rdx
  45 0031 48890C25 	    movq %rcx, tmp      #save the rcx before the call
  45      00000000 
  46 0039 E8000000 	    call printf
  46      00
  47 003e 488B0C25 	    movq tmp, %rcx      #restore the rcx after the call
  47      00000000 
  48              	
  49              	    #Set up for test and next iteration
  50 0046 48FFC1   	    incq %rcx
  51 0049 4D8D2CCE 	    leaq (%r14, %rcx, 8), %r13 #load the next element into r13
  52              	
  53              	    #test for end of loop
  54 004d 4D39FD   	    cmpq %r15, %r13
  55 0050 7CCE     	    jl  _printElement
  56              	    _endPrintElement:
  57              	
  58              	
  59              	_exit:
  60 0052 48C7C03C 	    movq $60, %rax
  60      000000
  61 0059 4831FF   	    xorq %rdi, %rdi
  62 005c 0F05     	    syscall
